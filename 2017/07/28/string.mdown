# 字符串操作方法

@(String类型)[操作方法|slice|substr|substring]

**String类型**  是字符串的对象包装类型。它的字符串操作方法主要有以下几种：
 
- **concat()** ：用来连接一个或多个字符串，返回的是新字符串，不会改变原字符串；
- **slice()** ： 基于子字符串创建新字符串，返回新字符串，也不会该变原字符串
- **substr()** ：同第二个；
- **substring()** ：同第二个。

------------------

## concat()



### 代码如下
``` javascript
var str1="hello ";
var str2=str1.concat('jkt');     // 一般还是用+里连接字符串
alert(str2);         // 'hello jkt'
alert(str1);         // 'hello ' 
```

>虽然可以通过concat()方法来专门的拼接任意字符串，但我们平时使用更多的还是加号操作符（+）。


### slice()

>该方法可以接受一个或两个参数，第一个参数指定字符串开始的位置，第二个参数指定到哪里结束。

``` javascript
var string="hello world!";
alert(string.slice(3));     //'lo world!'
alert(string.slice(3,7));   //'lo w'  从位置3截取到位置7，不包括位置7上的值
alert(string.slice(-3));    //'ld!' 将负值与字符串长度(12)相加=9,所以从位置9开始取
alert(string.slice(3,-4));  //'lo wo'   将第二个参数转为8（-4+12）

```

### substr()

>该方法也可以接受一个或两个参数，但是第一个参数指定字符串开始的位置，第二个参数指定截取几个。

``` javascript
var string="hello world!";
alert(string.substr(3));        //'lo world!'
alert(string.substr(3,7));      // 'lo worl' 从位置3开始截取7个
alert(string.substr(-3));       //'ld!' 将负的第一个参数与字符串长度(12)相加=9,所以从位置9开始截取
alert(string.substr(3,-4));     //'' 第二个负的参数转为0,从位置3处截取0个长度,所以是空字符串

```


### substring()

>该方法也可以接受一个或两个参数，第一个参数指定字符串开始的位置，第二个参数指定结束位置。

``` javascript
var string="hello world!";
alert(string.substring(3));      //'lo world!'
alert(string.substring(3，7));   //'lo w'  从位置3截取到位置7，不包括位置7上的值
alert(string.substring(-3));     //'hello world!'  substring()会将第一个负参数值转换为0
alert(string.substring(3,-4));   //'hel'将第二个负参数值转为0得到 (3,0)但这个方法会将较小的值作为开始位置，所以得到(0,3)

```

> **提示：**想了解更多，请查看**流程图**[语法][3]以及**时序图**[语法][4]。


